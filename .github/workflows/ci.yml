name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
env:
  CI: true
  ELIXIR_VERSION: '1.17.3'
  OTP_VERSION: '26.2'
  PHX_SIGNING_SALT: fake-value-for-testing
  SECRET_KEY_BASE: fake-value-for-testing
jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - name: Cache mix dependencies
        id: mix-cache
        uses: actions/cache@v4
        with:
          path: |
            deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Cache Compilation Artifacts
        id: build-cache
        uses: actions/cache@v4
        with:
          path: |
            _build
          key: ${{ runner.os }}-${{ github.ref }}-build-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ github.ref }}-build-
      - name: Install Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: mix deps.get
      - run: mix clean
      - run: mix compile
  test:
    needs: compile
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost/basic_phx_app
    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_DB: basic_phx_app_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - name: Cache mix dependencies
        id: mix-cache
        uses: actions/cache@v4
        with:
          path: |
            deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
      - name: Cache Compilation Artifacts
        id: build-cache
        uses: actions/cache@v4
        with:
          path: |
            _build
          key: ${{ runner.os }}-${{ github.ref }}-build-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ github.ref }}-build-
      - name: Cache Test Compilation Artifacts
        id: test-cache
        uses: actions/cache@v4
        with:
          path: |
            _build/test
          key: ${{ runner.os }}-${{ github.ref }}-test-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ github.ref }}-test-
      - run: MIX_ENV=test mix clean
      - run: mix test
  format:
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - name: Cache mix dependencies
        id: mix-cache
        uses: actions/cache@v4
        with:
          path: |
            deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
      - name: Cache Compilation Artifacts
        id: build-cache
        uses: actions/cache@v4
        with:
          path: |
            _build
          key: ${{ runner.os }}-${{ github.ref }}-build-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ github.ref }}-build-
      - run: mix format --check-formatted
  credo:
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - name: Cache mix dependencies
        id: mix-cache
        uses: actions/cache@v4
        with:
          path: |
            deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
      - name: Cache Compilation Artifacts
        id: build-cache
        uses: actions/cache@v4
        with:
          path: |
            _build
          key: ${{ runner.os }}-${{ github.ref }}-build-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ github.ref }}-build-
      - run: mix credo
  sobelow:
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - name: Cache mix dependencies
        id: mix-cache
        uses: actions/cache@v4
        with:
          path: |
            deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
      - name: Cache Compilation Artifacts
        id: build-cache
        uses: actions/cache@v4
        with:
          path: |
            _build
          key: ${{ runner.os }}-${{ github.ref }}-build-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ github.ref }}-build-
      - run: mix sobelow
  doctor:
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - name: Cache mix dependencies
        id: mix-cache
        uses: actions/cache@v4
        with:
          path: |
            deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
      - name: Cache Compilation Artifacts
        id: build-cache
        uses: actions/cache@v4
        with:
          path: |
            _build
          key: ${{ runner.os }}-${{ github.ref }}-build-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ github.ref }}-build-
      - run: mix doctor
  audit:
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - name: Cache mix dependencies
        id: mix-cache
        uses: actions/cache@v4
        with:
          path: |
            deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
      - name: Cache Compilation Artifacts
        id: build-cache
        uses: actions/cache@v4
        with:
          path: |
            _build
          key: ${{ runner.os }}-${{ github.ref }}-build-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ github.ref }}-build-
      - run: |
          mix deps.audit
          mix hex.audit
          mix deps.unlock --check-unused
  dialyzer:
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - name: Cache mix dependencies
        id: mix-cache
        uses: actions/cache@v4
        with:
          path: |
            deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
      - name: Cache Compilation Artifacts
        id: build-cache
        uses: actions/cache@v4
        with:
          path: |
            _build
          key: ${{ runner.os }}-${{ github.ref }}-build-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ github.ref }}-build-
      - name: Cache Dialyzer PLTs
        id: dialyzer-cache
        uses: actions/cache@v4
        with:
          path: |
            priv/plts
          key: ${{ runner.os }}-${{ github.ref }}-dialyzer-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ github.ref }}-dialyzer-
      - run: mix dialyzer
